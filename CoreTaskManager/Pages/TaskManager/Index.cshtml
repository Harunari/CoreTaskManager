@page
@model CoreTaskManager.Pages.TaskManager.IndexModel

@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = Model.ThisProgress.Title;
}

<link href="~/css/TaskManagercss.css" rel="stylesheet" />
<h2>@ViewData["Title"]</h2>
@*ボタン群*@
<br />
<div class="container">
    <div class="row">
        <div class="col-md-2">
            @*まだタスクが登録されていないときのみタスク設定できる*@
            @if (Model.ThisProgress.UserName == User.Identity.Name)
            {
                <a class="btn btn-warning" href="../OwnerPage?progressIdString=@Model.ThisProgress.Id.ToString()">
                    管理画面
                </a>
            }
        </div>
    </div>
    <br />
    @*入退出*@
    <div class="row">
        <div class="col-md-2">
            <form method="post">
                @if (Model.Participants.Where(p => p.ProgressId == Model.ThisProgress.Id)
.Select(p => p.UserName).Contains(User.Identity.Name))
                {
                    <button type="button" class="btn btn-dark" data-toggle="modal" data-target="#leaveYes">
                        退出
                    </button>
                }
                else
                {
                    <input type="submit" asp-page-handler="setpariticipant" class="btn btn-primary" value="参加" />
                }
            </form>
        </div>
    </div>
    <br />
    <div class="row">
        @*進捗一覧テーブル*@
        <div class="col-12">
            @if (Model.Participants.Count != 0)
            {
                <table class="wrap">
                    <thead>
                        <tr>
                            <th style="background-color:#3f3f3f;color:white">　　　　　　　</th>
                            @foreach (var item in Model.Participants)
                            {
                                <th style="background-color:#3f3f3f;color:white">
                                    @{
                                        var userName = item.UserName.Split('@')[0];
                                    }
                                    @Html.DisplayFor(modelItem => userName)
                                </th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            string[] columAlphaBet = { "", "A", "B", "C", "D", "E" };
                            var columNumber = 1;
                            var rowNumber = 1;
                        }
                        @foreach (var task in Model.ThisTasks)
                        {
                            <tr>
                                <td id="taskName" style="background-color:#3f3f3f;color:white">
                                    @rowNumber.ToString().
                                    @Html.DisplayFor(modelItem => task.TaskName)
                                </td>
                                @foreach (var item in Model.Participants)
                                {
                                    var achived = Model.AchivedInThisProgress.ToList();
                                    achived = achived.Where(a => a.TaskId == task.Id)
                                            .Where(a => a.UserName == item.UserName).ToList();
                                    string cellId = columAlphaBet[columNumber] + rowNumber.ToString();

                                    if (achived.Count == 0)
                                    {
                                        //ログインしているユーザ自身のセルとそれ以外を分ける
                                        int currentProgress = item.CurrentProgress;
                                        // 未達成タスクセル
                                        if (item.UserName == User.Identity.Name && currentProgress + 1 == rowNumber)
                                        {
                                            // ひとつ前が完了している申請できるタスクセル
                                            <td id="@cellId" style="background-color:darkgray" data-toggle="modal" data-target="#approvalRequest"></td>
                                        }
                                        else
                                        {
                                            // ひとつ前が完了しておらず、申請できないタスクセル
                                            <td id="@cellId" style="background-color:darkgray"></td>
                                        }
                                    }
                                    // 承認済みタスク
                                    else if (achived.First().IsAuthorized)
                                    {
                                        <td id="@cellId" style="background-color:greenyellow">
                                            【承認済み】<br />@achived.First().AchievedDateTime.ToString()
                                        </td>
                                    }
                                    // 未承認タスク
                                    else
                                    {
                                        <td id="@cellId" style="background-color:yellow">
                                            【未認証】<br />@achived.First().AchievedDateTime.ToString()
                                        </td>
                                    }
                                    columNumber++;
                                }
                            </tr>
                            rowNumber++;
                            columNumber = 1;
                        }

                    </tbody>

                </table>
            }

        </div>
    </div>
</div>
@*退出確認*@
<div class="modal fade" id="leaveYes" tabindex="-1" role="dialog" aria-labelledby="#leaveYesTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="leaveYesTitle">確認</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="閉じる">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <label>本当に退出しますか？</label>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">いいえ</button>
                <form method="post"><input type="submit" asp-page-handler="deleteparticipant" class="btn btn-danger" value="はい" /></form>
            </div>
        </div>
    </div>
</div>
@*進捗更新確認モーダル*@
<div class="modal fade" id="approvalRequest" tabindex="-1" role="dialog" aria-labelledby="#approvalRequestTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="approvalRequestTitle">確認</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="閉じる">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <label>一言（あれば）</label>
                <br />
                <textarea rows="5" cols="20" class="form-control" id="aSingleWord"></textarea>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger" id="approvalRequestButton">承認依頼</button>
                <button class="btn btn-secondary" data-dismiss="modal">キャンセル</button>
            </div>
        </div>
    </div>
</div>
@Html.AntiForgeryToken()
@section Scripts {
    <script src="~/js/TaskManager.js"></script>
}

