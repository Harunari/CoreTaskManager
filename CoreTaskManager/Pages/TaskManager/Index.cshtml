@page
@model CoreTaskManager.Pages.TaskManager.IndexModel

@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = Model.ThisProgress.Title;
}
<style>
    .alert1 {
        color: red;
    }
</style>
<h2>@ViewData["Title"]</h2>
@*ボタン群*@
<div class="container">
    <div class="row">
        <div class="col-md-2">
            <br />
            @*まだタスクが登録されていないときのみタスク設定できる*@
            @if (Model.ThisProgress.NumberOfItems == 0 && Model.ThisProgress.UserName == User.Identity.Name)
            {
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#registerNew" id="modalButton">
                    タスク設定
                </button>
            }
        </div>
    </div>
    <br />
    @*参加者登録機能*@
    <div class="row">
        <div class="col-md-2">
            <form method="post">
                @if (Model.Participants.Where(p => p.ProgressId == Model.ThisProgress.Id)
.Select(p => p.UserName).Contains(User.Identity.Name))
                {
                    <button type="button" class="btn btn-dark" data-toggle="modal" data-target="#leaveYes">
                        退出
                    </button>
                    <div class="modal fade" id="leaveYes" tabindex="-1" role="dialog" aria-labelledby="#leaveYesTitle" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="leaveYesTitle">確認</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="閉じる">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <label>本当に退出しますか？</label>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">いいえ</button>
                                    <input type="submit" asp-page-handler="deleteparticipant" class="btn btn-danger" value="はい" />
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <input type="submit" asp-page-handler="setpariticipant" class="btn btn-primary" value="参加" />
                }
            </form>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            @if (Model.Participants.Count != 0)
            {
                <table>
                    <thead>
                        <tr>
                            <th></th>
                            @foreach (var item in Model.Participants)
                            {
                                <th>
                                    @{
                                        var userName = item.UserName.Split('@')[0];
                                     }
                                    @Html.DisplayFor(modelItem => userName)
                                </th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var task in Model.ThisTasks)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => task.TaskName)
                                </td>
                                @*TODO: タスクが完了しているか否かのデータを持ってくる*@
                                @foreach (var item in Model.Participants)
                                {
                                    <td>
                                        未完了
                                    </td>
                                }
                            </tr>
                        }

                    </tbody>

                </table>
            }

        </div>
    </div>
</div>
@*タスク登録*@
<div class="modal fade" id="registerNew" tabindex="-1" role="dialog" aria-labelledby="#registerNewTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="registerNewTitle">新規登録</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="閉じる">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group" id="1">
                    <div id="task1Alert" class="alert1"></div>
                    <label>・タスク1(15文字以内)</label>
                    <input type="text" id="task1" class="form-control" />
                </div>
                @*追加タスク*@
                <div id="addedTask"></div>

                <div class="col-xs-offset-2 col-xs-10">
                    <input type="button" class="btn btn-default" value="タスク追加" id="addTask" />
                    <input type="button" class="btn btn-default" value="タスク削減" id="removeTask" />
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="modalClose" data-dismiss="modal">閉じる</button>
                <button type="button" class="btn btn-primary" id="transmitTaskData">変更を保存</button>
            </div>
        </div>
    </div>
</div>
@Html.AntiForgeryToken()
@section Scripts {
    <script src="~/js/TaskManager.js"></script>
}
